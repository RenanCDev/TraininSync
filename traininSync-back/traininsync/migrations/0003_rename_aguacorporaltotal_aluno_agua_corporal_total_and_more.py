# pylint: skip-file
# Generated by Django 5.2 on 2025-05-13 21:37
# Generated by Django 5.2 on 2025-05-13 00:42


import django.db.models.deletion
import traininsync.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("traininsync", "0002_servico_aluno"),
    ]

    operations = [
        migrations.RenameField(
            model_name="aluno",
            old_name="aguaCorporalTotal",
            new_name="agua_corporal_total",
        ),
        migrations.RenameField(
            model_name="aluno",
            old_name="dataDoExame",
            new_name="data_do_Exame",
        ),
        migrations.RenameField(
            model_name="aluno",
            old_name="horaDoExame",
            new_name="hora_do_Exame",
        ),
        migrations.RenameField(
            model_name="aluno",
            old_name="massaGordura",
            new_name="massa_gordura",
        ),
        migrations.RenameField(
            model_name="aluno",
            old_name="massaMusculaEsqueletica",
            new_name="massa_muscular_esqueletica",
        ),
        migrations.RenameField(
            model_name="aluno",
            old_name="taxaMetabolicaBasal",
            new_name="taxa_metabolica_basal",
        ),
        migrations.RenameField(
            model_name="servico",
            old_name="descricaoDoServico",
            new_name="descricao_do_servico",
        ),
        migrations.RenameField(
            model_name="servico",
            old_name="tipoDeServico",
            new_name="tipo_de_servico",
        ),
        migrations.RenameField(
            model_name="servico",
            old_name="valorDoServico",
            new_name="valr_do_servico",
        ),
        migrations.AlterField(
            model_name="dadosbancarios",
            name="agencia",
            field=models.CharField(max_length=10),
        ),
        migrations.AlterField(
            model_name="dadosbancarios",
            name="numero_conta",
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name="pessoa",
            name="cpf",
            field=models.CharField(
                max_length=11, unique=True, validators=[traininsync.models.validar_cpf]
            ),
        ),
        migrations.CreateModel(
            name="Agenda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dia", models.DateField()),
                ("hora_inicio", models.TimeField()),
                ("hora_fim", models.TimeField()),
                ("local", models.CharField(max_length=150)),
                ("disponivel", models.BooleanField(default=True)),
                (
                    "personal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agendas",
                        to="traininsync.personal",
                    ),
                ),
            ],
            options={
                "ordering": ["dia", "hora_inicio"],
            },
        ),
        migrations.CreateModel(
            name="ContratoDeServico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("localidade_desejada", models.CharField(max_length=150)),
                (
                    "aluno",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contratos",
                        to="traininsync.aluno",
                    ),
                ),
                (
                    "horario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contratos",
                        to="traininsync.agenda",
                    ),
                ),
                (
                    "personal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contratos",
                        to="traininsync.personal",
                    ),
                ),
                (
                    "servico_desejado",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contratos",
                        to="traininsync.servico",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="agenda",
            name="reserva",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="agenda_reservada",
                to="traininsync.contratodeservico",
            ),
        ),
        migrations.CreateModel(
            name="Pagamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("valor", models.DecimalField(decimal_places=2, max_digits=8)),
                ("data_pagamento", models.DateField(auto_now_add=True)),
                ("descricao", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "aluno",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pagamentos",
                        to="traininsync.aluno",
                    ),
                ),
                (
                    "contrato",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pagamentos",
                        to="traininsync.contratodeservico",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RegistroDeProgresso",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField()),
                ("massa_gorda", models.FloatField(blank=True, null=True)),
                ("massa_magra", models.FloatField(blank=True, null=True)),
                ("massa_muscular", models.FloatField(blank=True, null=True)),
                ("hidratacao", models.FloatField(blank=True, null=True)),
                ("densidade_ossea", models.FloatField(blank=True, null=True)),
                ("gordura_visceral", models.FloatField(blank=True, null=True)),
                ("taxa_de_metabolismo_basal", models.FloatField(blank=True, null=True)),
                ("altura", models.FloatField()),
                ("peso", models.FloatField()),
                ("reated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "aluno",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registros",
                        to="traininsync.aluno",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="agenda",
            unique_together={("personal", "dia", "hora_inicio")},
        ),
    ]
