# Generated by Django 5.2 on 2025-04-14 13:56

import django.core.validators
import django.db.models.deletion
import traininsync.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("traininsync", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DadosBancarios",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero_conta", models.BigIntegerField()),
                ("agencia", models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Pessoa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=255)),
                (
                    "cpf",
                    models.CharField(
                        max_length=11,
                        unique=True,
                        validators=[traininsync.models.validar_cpf],
                    ),
                ),
                ("data_de_nascimento", models.DateField()),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "numero_de_celular",
                    models.CharField(
                        max_length=11,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Número de celular deve conter 11 dígitos numéricos (ex: DDD + 9 dígitos)",
                                regex="^\\d{11}$",
                            )
                        ],
                    ),
                ),
                (
                    "sexo",
                    models.CharField(
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Feminino"),
                            ("O", "Outro"),
                            ("N", "Prefiro não dizer"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "nome_social",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "etnia",
                    models.CharField(
                        choices=[
                            ("branca", "Branca"),
                            ("preta", "Preta"),
                            ("parda", "Parda"),
                            ("amarela", "Amarela"),
                            ("indigena", "Indígena"),
                            ("nao_informado", "Prefiro não dizer"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "estado_civil",
                    models.CharField(
                        choices=[
                            ("solteiro", "Solteiro(a)"),
                            ("casado", "Casado(a)"),
                            ("divorciado", "Divorciado(a)"),
                            ("viuvo", "Viúvo(a)"),
                            ("uniao_estavel", "União Estável"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.DeleteModel(
            name="Produto",
        ),
        migrations.CreateModel(
            name="Personal",
            fields=[
                (
                    "pessoa_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="traininsync.pessoa",
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                ("cref", models.CharField(max_length=20, unique=True)),
                ("especialidades", models.TextField()),
                ("experiencia_profissional", models.TextField()),
                ("horarios_disponiveis", models.FloatField()),
                ("locais_disponiveis", models.TextField()),
                (
                    "dados_bancarios",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="personal",
                        to="traininsync.dadosbancarios",
                    ),
                ),
            ],
            bases=("traininsync.pessoa",),
        ),
    ]
